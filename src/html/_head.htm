<head>
  <title>@@title</title>
  <meta charset="UTF-8" />
  <meta name="format-detection" content="telephone=no" />
  <link rel="shortcut icon" href="favicon.ico" />
  <!-- <meta name="robots" content="noindex, nofollow"> -->
  <meta
    name="viewport"
    content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1" />

  <!-- critical js -->
  <script>
    const apply = (root = document) => {
      root.querySelectorAll('.article__group').forEach(el => {
        const txt = el.querySelector('.article__txt_sm');
        if (!txt || !txt.textContent.trim()) el.classList.add('_fww');
      });
    };

    document.addEventListener(
      'readystatechange',
      () => {
        if (document.readyState !== 'loading') apply();
      },
      {
        once: true,
      }
    );

    const mo = new MutationObserver(muts => {
      for (const m of muts) {
        m.addedNodes.forEach(n => {
          if (!(n instanceof Element)) return;
          if (n.matches?.('.article__group')) apply(n);
          else if (n.querySelector) apply(n);
        });
      }
    });
    mo.observe(document.documentElement, {
      childList: true,
      subtree: true,
    });
    document.fonts.ready.then(function () {
      const e = document.getElementById('loader-time');
      if (e) {
        function showTimeUTC4() {
          const now = new Date();

          const utcPlus4 = new Date(now.getTime() + 4 * 60 * 60 * 1000);

          const hours = utcPlus4.getUTCHours().toString().padStart(2, '0');
          const minutes = utcPlus4.getUTCMinutes().toString().padStart(2, '0');
          const seconds = utcPlus4.getUTCSeconds().toString().padStart(2, '0');

          e.innerHTML = `${hours}:${minutes}:${seconds}`;
        }
        showTimeUTC4();
        setInterval(showTimeUTC4, 1000);
      }
      const n = document.querySelectorAll('.preloader__progress');
      if (n.length) {
        for (let e = 0; e < n.length; e++) {
          const t = n[e];
          let o = 0,
            l = setInterval(function () {
              (t.innerHTML = ++o), o >= 99 && clearInterval(l);
            }, 10);
        }
      }
    }),
      (document.fonts.onloadingdone = function (e) {
        document.documentElement.classList.add('_fonts-loaded');
      });
  </script>

  <!-- critical css  -->
  <style>
    html::before {
      content: '';

      position: fixed;
      z-index: 2;
      inset: 0;

      background-image: url(@img/vectors/bg.svg);
      background-position: center var(--y);
      background-size: contain;
      background-repeat: repeat;
    }

    ._fonts-loaded .preloader__container {
      opacity: 1;
      filter: blur(0);
      transform: translateY(0);
    }
    @media (max-width: 49em) {
      html::before {
        background-image: url(@img/vectors/bg-m.svg);
      }
    }
  </style>

  <link rel="stylesheet" href="css/style.css" />
  <link
    rel="preload"
    href="https://unpkg.com/lenis@1.2.3/dist/lenis.css"
    as="style"
    onload="this.rel='stylesheet'" />
</head>
